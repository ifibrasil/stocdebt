\name{export_to_excel}
\alias{export_to_excel}
\title{Export results to an xlsx file}
\description{
Exports a variety of objects generated by simulations to an xlsx file.
}
\usage{
export_to_excel(
  object,
  type,
  percentiles = c(0.1,0.25,0.5,0.75,0.9),
  filename,
  draw_charts = NULL,
  percentile_labels = FALSE,
  d = NULL,
  stock_flow_adjustments = NULL,
  date_format = "dd/mm/yyyy",
  chart_with_title = TRUE,
  x_axis_label = NULL,
  y_axis = NULL,
  color = "#005d89",
  seed_if_limited_export = 1,
  max_to_export = 10,
  max_lags = 10,
  bartlett_level = 0.05,
  box_pierce_lag = 5,
  ljung_box_lag = 5
)
}
\arguments{
\item{object}{This object must be
	\itemize{
		\item{a \code{list} outputted by function \code{\link{sim}}, if \code{type = "simulation"}.}
		\item{a \code{list} outputted by function \code{\link{dde}} , if \code{type = "debt_dynamics_equation"}.}
		\item{an \code{xts} object with realized data, if \code{type = "correlograms"}.}
		\item{a \code{list} outputted by function \code{\link{event_prob}}, if \code{type = "event_prob"}.}
		}
}

\item{type}{\code{character(1)}. The type of object whose data will be prepared and exported. It must be one of: \code{"simulation"}, \code{"debt_dynamics_equation"}, \code{"correlograms"} or \code{"event_prob"}.}

\item{percentiles}{\code{numeric(n)}. Numeric vector with one or more percentiles, in decimal form, to draw fan charts. For example, for the 10\% and 90\% percentiles, use \code{c(0.1,0.9)}. Used only if \code{type="simulation"}.}

\item{filename}{\code{character(1)}. Path to the xlsx file to be generated.}

\item{draw_charts}{\code{character(n)} or \code{logical(1)}. The usage depends on the value of argument \code{type}, as follows.
	\itemize{
		\item{For \code{type = "simulation"}:
			\itemize{
				\item{if \code{draw_charts = NULL} (default), no fan charts are drawn into the xlsx file.}
				\item{if \code{draw_charts} is a character vector of variable names -- for example, \code{c("debt","real gdp growth")}) -- fan charts are drawn for these variables. The variable names provided must be within those informed in argument \code{realized_data} in function \code{\link{sim}}.}
				\item{if \code{draw_charts = "all"}, fan charts are drawn for all variables.}
			}
		}
		\item{For \code{type = "debt_dynamics_equation"}:
			\itemize{
				\item{if \code{draw_charts = NULL} (default) or \code{draw_charts = FALSE}, no charts are drawn into the xlsx file.}
				\item{if \code{draw_charts = TRUE}, charts are drawn into the xlsx file. These charts are useful to assess the trajectory of simulated debt \emph{versus} realized debt.}
			}

		}
	}
}

\item{percentile_labels}{\code{character(n)}. Used only if \code{type = "simulation"}. Should labels be drawn for the percentiles on the fan chart? Default is \code{FALSE}.}

\item{d}{\code{character(1)}. Used only if \code{type = "debt_dynamics_equation"}. Name of the debt variable in argument \code{realized_data} in function \code{\link{dde}}.}

\item{stock_flow_adjustments}{\code{character(1)}. Used only if \code{type = "debt_dynamics_equation"}. Name of the stock-flow adjustments variable, in argument \code{stock_flow_adjustments} in function \code{\link{dde}}.}

\item{date_format}{\code{character(1)}. Date format to be used for time series periods in the xlsx file cells. Default is \code{"dd/mm/yyyy"}. For example, to see only years, set \code{"yyyy"}.}

\item{chart_with_title}{\code{logical(1)}. Should the fan charts have titles (variable names)? Default is TRUE.}

\item{x_axis_label}{\code{character(1)}. Text to be shown as the x-axis label in the fan charts. Default is NULL (no label).}

\item{y_axis}{\code{list(n)}. Used only if \code{type = "simulation"}. List with maxima and minima for the y-axis in the fan charts. For example, \code{list("debt" = c(0,100), "real gdp growth" = c(-5,5))} will set the range of the y-axis to be [0,100] in the fan chart for debt, and [-5,5] in the fan chart for real GDP growth. Variable names must be those used in argument \code{realized_data} in function \code{\link{sim}}.}

\item{color}{\code{character(1)}. Used only if \code{type = "simulation"}. RGB code of the color to be used in the fan charts. The default is dark blue (\code{#005d89}).}

\item{seed_if_limited_export}{\code{integer(1)}. Used only if \code{type = "simulation"}. In case there are too many stochastic scenarios to write into the xlsx file, a sample of them will be drawn based on this seed. Default seed is 1.}

\item{max_to_export}{\code{integer(1)}. Used only if \code{type = "simulation"}. Maximum number of stochastic scenarios to export. The more scenarios exported, the larger the xlsx file will be. Default is 10. Note that fan charts are not affected (see section \dQuote{Details}).}

\item{max_lags}{\code{integer(1)}. Used only if \code{type = "correlograms"}. Maximum number of lags in the autocorrelation function. Default is 10.}

\item{bartlett_level}{\code{integer(1)}. Used only if \code{type = "correlograms"}. Significance level of Bartlett's test. Must be informed in decimal points. For example, for a significance of 5\%, inform it as 0.05. Default is 5\%.}

\item{box_pierce_lag}{\code{integer(1)}. Used only if \code{type = "correlograms"}. Number of lags to be used in the Box-Pierce test. Default is 5.}

\item{ljung_box_lag}{\code{integer(1)}. Used only if \code{type = "correlograms"}. Number of lags to be used in the Ljung-Box test. Default is 5.}
}
\details{

The function extracts objects from argument \code{object} and creates a variety of worksheets in an xlsx file. These sheets will be filled with tables. To draw charts based on such tables, the user must have Python installed in the computer, because R will call Python in the background.

Specifically when \code{type = "simulation"}, if there are too many stochastic scenarios to export to the xlsx file, only a subset of them (\code{max_to_plot}) are indeed written into that file. This limitation has been set to prevent the xlsx file from becoming excessively large and difficult to handle. However, the fan charts are not affected by \code{max_to_plot}, because their percentiles are computed from all stochastic scenarios, without exception. The total number of stochastic scenarios used to compute the percentiles is that informed in argument \code{n_stochastic_scenarios} of function \code{\link{sim}}.

}
\examples{
## Exporting CORRELOGRAMS (this is independent of any simulation)
#############################################################################

x <- sample_series$realized_quarterly_data["2007-12-01/2019-12-01",
	c("nominal interest rate", "gdp deflator", "real gdp growth", "primary balance")]

\dontrun{
export_to_excel(
  object = x,
  type = "correlograms",
  filename = "correlograms.xlsx",
  bartlett_level = 0.05,
  box_pierce_lag = 4,
  ljung_box_lag = 4
)
}







## Exporting FAN CHARTS
#############################################################################

## Step 1) generate yearly shocks using function "shocks_generator"
shocks <- shocks_generator(
  case = "ec",
  n_stochastic_scenarios = 100,
  realized_data = sample_series$realized_yearly_data,
  subintervals = "2009-12-01/2019-12-01",
  shocks_first_date = "2024-12-01",
  shocks_last_date = "2028-12-01",
  shocks_frequency = "year",
  i = "nominal interest rate",
  ti = "gdp deflator",
  g = "real gdp growth",
  p = "primary balance"
)

## Step 2) simulate the stochastic scenarios
s <- sim(
  first_date_to_simulate = "2024-12-01",
  last_date_to_simulate = "2028-12-01",
  realized_data = sample_series$realized_yearly_data,
  baseline_scenario = sample_series$baseline_yearly_scenario,
  baseline_as_median = TRUE,
  n_stochastic_scenarios = 100,
  shocks = shocks$shocks,
  d = "debt",
  i = "nominal interest rate",
  ti = "gdp deflator",
  r = "real interest rate (w.r.t. gdp deflator)",
  g = "real gdp growth",
  p = "primary balance"
)

## Step 3) export the simulated stochastic scenarios
## to an xlsx file and create fan charts for debt and
## primary balance only
\dontrun{
export_to_excel(
  object = s,
  type = "simulation",
  percentiles = c(0.1,0.25,0.5,0.75,0.9),
  filename = "simulation_results.xlsx",
  draw_charts = c("debt","primary balance"),
  date_format = "yyyy",
  y_axis = list(debt = c(50,100))
)
}







## Exporting EVENT PROBABILITIES (based on the simulation just above)
#############################################################################

## Step 1) compute probabilities of events,
## focusing on the subinterval 2024-2026
e <- event_prob(
  object = s,
  d = "debt",
  threshold = 90,
  interval = list(
    start = "2024-12-01",
    end = "2026-12-01"
  )
)

## Step 2) export the estimated probabilities
## to an xlsx file
\dontrun{
export_to_excel(
  object = e,
  type = "event_prob",
  filename = "event_probabilities.xlsx"
)
}







## Exporting DETERMINISTIC debt paths (computed using function "dde")
#############################################################################

## Step 1) simulate a deterministic path for debt
x <- dde(
  realized_data = sample_series$realized_yearly_data,
  stock_flow_adjustments = sample_series$realized_yearly_sfa_data,
  d = "debt",
  i = "nominal interest rate",
  ti = "gdp deflator",
  r = "real interest rate (w.r.t. gdp deflator)",
  g = "real gdp growth",
  p = "primary balance"
)

## Step 2) export the simulated deterministic path
## to an xlsx file and create charts useful for
## analysis
\dontrun{
export_to_excel(
  object = x,
  type = "debt_dynamics_equation",
  filename = "simulation_results_2.xlsx",
  draw_charts = TRUE,
  d = "debt",
  stock_flow_adjustments = "stock-flow adjustments",
  date_format = "yyyy",
  chart_with_title = FALSE
)
}
}
